env REDIS_HOST;
env REDIS_PORT;
env REDIS_URL;
env RESOLVER;
env BACKEND_ENDPOINT_OVERRIDE;
env RHSSO_ENDPOINT;
env OPENSSL_VERIFY;
include ../main.d/*.conf;
error_log /dev/null emerg;
events {
  worker_connections  16192;
  multi_accept        on;
}
http {
  sendfile           on;
  tcp_nopush         on;
  tcp_nodelay        on;
  server_names_hash_bucket_size 128;
  log_format time '[$time_local] $host:$server_port $remote_addr:$remote_port "$request" $status $body_bytes_sent ($request_time) $post_action_impact';
  access_log off;

  lua_package_cpath ";;${prefix}?.so;${prefix}src/?.so;/usr/share/lua/5.1/lua/resty/moesif/?.so;/usr/share/lua/5.1/?.so;/usr/lib64/lua/5.1/?.so;/usr/lib/lua/5.1/?.so;/usr/local/openresty/luajit/share/lua/5.1/lua/resty?.so";
  lua_package_path ";;${prefix}?.lua;${prefix}src/?.lua;/usr/share/lua/5.1/lua/resty/moesif/?.lua;/usr/share/lua/5.1/?.lua;/usr/lib64/lua/5.1/?.lua;/usr/lib/lua/5.1/?.lua;/usr/local/openresty/luajit/share/lua/5.1/lua/resty?.lua";
  
  lua_code_cache on;
  include ../http.d/*.conf;
  server {
    listen 8090;
    server_name _;
    include ../conf.d/management.conf;
  }
  server {
    listen 8081;
    server_name backend;
    include ../conf.d/backend.conf;
  }
  server {
    listen 8081 default_server;
    server_name echo _;
    include ../conf.d/echo.conf;
  }
  server {
    access_log /dev/stdout time;
    listen 8080;
    resolver 8.8.8.8;
    server_name _;
    underscores_in_headers on;

    include ../http.d/ssl.conf;
    include ../apicast.d/*.conf;
    include ../conf.d/apicast.conf;

    # Customer identity variables that Moesif will read downstream
    # Set automatically from 3scale management API
    set $moesif_user_id nil;
    set $moesif_company_id nil;
    set $moesif_req_body nil;
    set $moesif_res_body nil;
    
    access_by_lua_file /usr/share/lua/5.1/lua/resty/moesif/read_req_body.lua;
    body_filter_by_lua_file /usr/share/lua/5.1/lua/resty/moesif/read_res_body.lua;
    log_by_lua_file /usr/share/lua/5.1/lua/resty/moesif/send_event_3Scale.lua;

    location /api/user {
      proxy_pass http://127.0.0.1:8080/echo;
    }

    location /echo {
      add_header Content-Type "application/json";
      return 200 '{\r\n  \"userId\": 1,\r\n  \"id\": 1,\r\n  \"title\": \"delectus aut autem\",\r\n  \"completed\": false\r\n}';
    }
  }
  include ../sites.d/*.conf;
}
